{"version":3,"sources":["logo.svg","Login.js","App.js","store/reducers/rootReducer.js","config/fbConfigDeets.js","config/fbconfig.js","index.js"],"names":["Login","useEffect","useState","isSignedin","setIsSignedIn","setTimeout","iframe","document","getElementById","iframeWin","contentWindow","iframeDoc","contentDocument","script","createElement","append","documentElement","appendChild","err","console","log","strict","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","res","user","email","includes","M","toast","html","signOut","then","catch","style","height","src","width","margin","frameborder","marginheight","marginwidth","id","className","justifySelf","alignSelf","display","flexDirection","justifyContent","textAlign","firebaseAuth","App","addEventListener","e","preventDefault","onkeydown","keyCode","ctrlKey","shiftKey","charCodeAt","rootReducer","combineReducers","firestore","firestoreReducer","firebaseReducer","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","config","databaseURL","initializeApp","storage","rrfConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","store","createStore","compose","applyMiddleware","thunk","reduxFirestore","fbConfig","dispatch","createFirestoreInstance","AuthIsReady","children","useSelector","state","isLoaded","ReactDOM","render"],"mappings":"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","file":"static/js/main.cfe62409.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\nimport M from 'materialize-css'\r\n\r\nexport default function Login() {\r\n\r\n    useEffect(() => {\r\n        // var $iframes = $('zeIframe');\r\n        // $iframes.each(function () {\r\n        //      var thisDoc = this.contentWindow.document;\r\n        //      if ( ! thisDoc.getElementById(scriptID)) {\r\n        //          var scriptObj = thisDoc.createElement(\"script\");\r\n        //          scriptObj.type = \"text/javascript\";\r\n        //          scriptObj.id = scriptId;\r\n        //          scriptObj.innerHTML = script;\r\n        //          thisDoc.body.appendChild(scriptObj);\r\n        //      }\r\n        //  });\r\n\r\n        // setTimeout(() => {\r\n        //     var script = `document.onkeydown = function (e) {\r\n        //         if (e.keyCode == 123) {\r\n        //           return false;\r\n        //         }\r\n        //         if (e.ctrlKey && e.shiftKey && e.keyCode == 'I'.charCodeAt(0)) {\r\n        //           return false;\r\n        //         }\r\n        //         if (e.ctrlKey && e.shiftKey && e.keyCode == 'J'.charCodeAt(0)) {\r\n        //           return false;\r\n        //         }\r\n        //         if (e.ctrlKey && e.keyCode == 'U'.charCodeAt(0)) {\r\n        //           return false;\r\n        //         }\r\n        //       }`;\r\n        //     window.$('#zeIframe').contents().find('body').append(window.$('<script>').html(script))\r\n        // }, 3000);\r\n\r\n        // var myFrame = document.getElementById('zeIframe');\r\n\r\n        // myFrame.contentWindow.foo = document.onkeydown = function (e) {\r\n        //     if (e.keyCode == 123) {\r\n        //         return false;\r\n        //     }\r\n        //     if (e.ctrlKey && e.shiftKey && e.keyCode == 'I'.charCodeAt(0)) {\r\n        //         return false;\r\n        //     }\r\n        //     if (e.ctrlKey && e.shiftKey && e.keyCode == 'J'.charCodeAt(0)) {\r\n        //         return false;\r\n        //     }\r\n        //     if (e.ctrlKey && e.keyCode == 'U'.charCodeAt(0)) {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n\r\n        // setTimeout(() => {\r\n        //     const iframe = document.getElementById('zeIframe');\r\n        //     const iframeWin = iframe.contentWindow || iframe;\r\n        //     const iframeDoc = iframe.contentDocument || iframeWin.document;\r\n\r\n        //     var script = iframeDoc.createElement(\"script\");\r\n        //     script.append(`\r\n        //         document.querySelector(\"html\").addEventListener('contextmenu', (e) => {\r\n        //             e.preventDefault();\r\n        //         });\r\n        //     `);\r\n        //     iframeDoc.documentElement.appendChild(script);\r\n        // }, 10000);\r\n\r\n    })\r\n\r\n    const strict = () => {\r\n        try {\r\n            const iframe = document.getElementById('zeIframe');\r\n            const iframeWin = iframe.contentWindow || iframe;\r\n            const iframeDoc = iframe.contentDocument || iframeWin.document;\r\n          \r\n            var script = iframeDoc.createElement(\"script\");\r\n            script.append(`\r\n                window.onload = function() {\r\n                    document.querySelector(\"html\").addEventListener('contextmenu', (e) => {\r\n                        e.preventDefault();\r\n                    });\r\n                    document.onkeydown = function (e) {\r\n                        if (e.keyCode == 123) {\r\n                            return false;\r\n                        }\r\n                        if (e.ctrlKey && e.shiftKey && e.keyCode == 'I'.charCodeAt(0)) {\r\n                            return false;\r\n                        }\r\n                        if (e.ctrlKey && e.shiftKey && e.keyCode == 'J'.charCodeAt(0)) {\r\n                            return false;\r\n                        }\r\n                        if (e.ctrlKey && e.keyCode == 'U'.charCodeAt(0)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            `);\r\n            iframeDoc.documentElement.appendChild(script);\r\n        } catch(err) {\r\n            console.log(\"eeror\", err)\r\n        }\r\n    }\r\n\r\n    const [isSignedin, setIsSignedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            strict()\r\n        }, 1000)\r\n    }, [isSignedin])\r\n\r\n    const uiConfig = {\r\n        // Popup signin flow rather than redirect flow.\r\n        signInFlow: 'popup',\r\n        // We will display Google and Facebook as auth providers.\r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        ],\r\n        callbacks: {\r\n            // Avoid redirects after sign-in.\r\n            signInSuccessWithAuthResult: (res) => {\r\n                if (res.user && res.user.email && res.user.email.includes(\"nmims.edu.in\")) {\r\n                    setIsSignedIn(res)\r\n                } else {\r\n                    M.toast({ html: \"You must login with an nmims email domain. Logging out...\" })\r\n                    firebase.auth().signOut().then(() => {\r\n                        M.toast({ html: \"Logged out. Refresh to continue\" })\r\n                    }).catch((err) => {\r\n                        console.log(\"Error caught while logging out:\", err)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isSignedin ? (\r\n                    <div style={{ height: \"95vh\" }} >\r\n                        <iframe\r\n                            src=\"https://docs.google.com/forms/d/e/1FAIpQLSeZtLUO3sTUi-aGuuRxvyk37BAVbDjEN0fYM5CIwCQ_iCy48Q/viewform?embedded=true\"\r\n                            width=\"80%\"\r\n                            height=\"100%\"\r\n                            style={{ margin: \"0 auto\" }}\r\n                            frameborder=\"0\"\r\n                            marginheight=\"0\"\r\n                            marginwidth=\"0\"\r\n                            id=\"zeIframe\"\r\n                            // onLoad={() => strict()}\r\n                        >Loading…</iframe>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"valign-wrapper\" style={{\r\n                        height: \"95vh\",\r\n                        width: \"100vw\",\r\n                        justifySelf: \"center\",\r\n                        alignSelf: \"center\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                    }} >\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <h4>Please login using NMIMS ID</h4>\r\n                            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Login from './Login';\n\nfunction App() {\n  useEffect(() => {\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n    });\n    document.onkeydown = function (e) {\n      if (e.keyCode == 123) {\n        return false;\n      }\n      if (e.ctrlKey && e.shiftKey && e.keyCode == 'I'.charCodeAt(0)) {\n        return false;\n      }\n      if (e.ctrlKey && e.shiftKey && e.keyCode == 'J'.charCodeAt(0)) {\n        return false;\n      }\n      if (e.ctrlKey && e.keyCode == 'U'.charCodeAt(0)) {\n        return false;\n      }\n    }\n  }, [])\n  return (\n      <div className=\"App\" >\n        <Login />\n      </div>\n  );\n}\n\nexport default App;\n","//import authReducer from './authreducer'\r\n// import coordReducer from './coordReducer'\r\n// import projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    // coordinates: coordReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer","export default {\r\n    apiKey: \"AIzaSyAQC4XQouIZ5wQGaa7Fe1sAHp0YdXU4keo\",\r\n    authDomain: \"gdsc-form-release.firebaseapp.com\",\r\n    projectId: \"gdsc-form-release\",\r\n    storageBucket: \"gdsc-form-release.appspot.com\",\r\n    messagingSenderId: \"321669275434\",\r\n    appId: \"1:321669275434:web:72bd6ac5f4a1cbbc998853\",\r\n    measurementId: \"G-1TCKGL8GFP\"\r\n};","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage';\r\nimport config from './fbConfigDeets'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: config.apiKey,\r\n  authDomain: config.authDomain,\r\n  databaseURL: config.databaseURL,\r\n  projectId: config.projectId,\r\n  storageBucket: config.storageBucket,\r\n  messagingSenderId: config.messagingSenderId,\r\n  appId: config.appId,\r\n  measurementId: config.measurementId\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const db = firebase.firestore()\r\n  export const storage = firebase.storage()\r\n\r\n  export default firebase","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider, useSelector } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, isLoaded } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\nimport fbConfig from './config/fbconfig';  //this is the config file in which firebase connection details are present\n// along with firebase.initializeApp() and firebase.firestore() commands\n// import OctopusLoading from './images/Loading.gif';\n\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true, //include if using firestore\n  attachAuthIsReady: true  //include if using firebase auth\n}\n\n// reduxFirestore worked for me and i guess is still there in the current version3\n// NOTE: This is a necessary step, because when you're using firebaseReducer and firestoreReducer in\n// the root reducer then those reducers know which firebase database to connect to as you pass these information\n// as fbConfig, so you're store now knows about youre firebase configuration file\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    reduxFirestore(fbConfig)\n  )\n);\n\n// we pass these props from the <ReactReduxFirebaseProvider> down to all the elements and catch \n// the firebase property using the withFirebase() function (HOC)\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\n// this function is used as an alternative to the function in v2.*.* so that my DOM renders only when\n// my firebase has made a connection (ignore this if not using firebase.auth())\nfunction AuthIsReady({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (isLoaded(auth)) {\n    return children;\n  }\n  else {\n    return <div className=\"progress\">\n      <div className=\"indeterminate\"></div>\n    </div>\n  }\n}\n\n// remove <AuthIsReady> tag is not using firebase.auth()\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider firebase={firebase} config={rrfConfig} dispatch={store.dispatch} createFirestoreInstance={createFirestoreInstance}>\n      <AuthIsReady>\n        <App />\n      </AuthIsReady>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}